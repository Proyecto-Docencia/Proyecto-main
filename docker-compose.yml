services:

  ia_frontend:
    container_name: ia_frontend
    build: ./frontend
    ports:
      - "8001:80" # Puerto cambiado para evitar conflicto con backend
    restart: unless-stopped

  ia_backend:
    container_name: ia_backend
    build: ./backend
    ports:
      - "8080:8080" # Puerto backend, sin conflicto
    env_file:
      - ./env/.env
    environment:
      # Permite sobreescribir puntualmente sin editar el .env
      GEMINI_API_KEY: ${GEMINI_API_KEY:-${GEMINI_API_KEY}}
    volumes:
      - ./env:/app/env:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Nota: Proxy de Cloud SQL se ejecuta externamente en el host.
  # Inicia en Windows (PowerShell):
  #   $env:GOOGLE_APPLICATION_CREDENTIALS="C:/ruta/al/admin123.json"
  #   cloud-sql-proxy --port 3307 ${INSTANCE_CONNECTION_NAME}
  # Ajusta DB_HOST=host.docker.internal en env/.env para que el contenedor se conecte al proxy externo.

  # Opcional: si quieres usar el Cloud SQL Auth Proxy en lugar de exponer la IP p√∫blica de la DB
  # Descomenta este bloque y ajusta INSTANCE_CONNECTION_NAME y ruta a credenciales.
  # cloudsql-proxy:
  #   image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.4
  #   command: ["--port=5432", "${INSTANCE_CONNECTION_NAME}"]
  #   environment:
  #     GOOGLE_APPLICATION_CREDENTIALS: /config/credentials.json
  #   volumes:
  #     - ./env/credentials.json:/config/credentials.json:ro
  #   restart: unless-stopped
